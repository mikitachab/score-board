// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mikitachab/score-board/templateloader (interfaces: TemplateInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockTemplateInterface is a mock of TemplateInterface interface
type MockTemplateInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTemplateInterfaceMockRecorder
}

// MockTemplateInterfaceMockRecorder is the mock recorder for MockTemplateInterface
type MockTemplateInterfaceMockRecorder struct {
	mock *MockTemplateInterface
}

// NewMockTemplateInterface creates a new mock instance
func NewMockTemplateInterface(ctrl *gomock.Controller) *MockTemplateInterface {
	mock := &MockTemplateInterface{ctrl: ctrl}
	mock.recorder = &MockTemplateInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTemplateInterface) EXPECT() *MockTemplateInterfaceMockRecorder {
	return m.recorder
}

// Render mocks base method
func (m *MockTemplateInterface) Render(arg0 io.Writer, arg1 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Render", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Render indicates an expected call of Render
func (mr *MockTemplateInterfaceMockRecorder) Render(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Render", reflect.TypeOf((*MockTemplateInterface)(nil).Render), arg0, arg1)
}
